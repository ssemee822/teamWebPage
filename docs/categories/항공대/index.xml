<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>항공대 on Universal</title>
    <link>https://ssemee822.github.io/teamWebPage/categories/%ED%95%AD%EA%B3%B5%EB%8C%80/</link>
    <description>Recent content in 항공대 on Universal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Aug 2021 21:29:20 +0200</lastBuildDate><atom:link href="https://ssemee822.github.io/teamWebPage/categories/%ED%95%AD%EA%B3%B5%EB%8C%80/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Container란?</title>
      <link>https://ssemee822.github.io/teamWebPage/container/content-post1/</link>
      <pubDate>Sun, 01 Aug 2021 21:29:20 +0200</pubDate>
      
      <guid>https://ssemee822.github.io/teamWebPage/container/content-post1/</guid>
      <description>Container란? 컨테이너는 애플리케이션과 필요한 모든 파일을 하나의 런타임 환경으로 묶는 데 사용하는 기술입니다. 단일 구성 단위로서 컨테이너는 모든 컨텍스트의 모든 운영 체제에서 쉽게 이동 및 실행할 수 있습니다.
효율적이고 원활한 환경 전환 컨테이너를 사용하면 소프트웨어를 격리하고 다른 운영 체제, 하드웨어, 네트워크, 스토리지 시스템 및 보안 정책에서 독립적으로 작업할 수 있습니다. 컨테이너 기반 애플리케이션을 개발, 테스트 및 생산 환경 전반에서 원활하게 전환할 수 있습니다. 운영 체제가 컨테이너에 포함되어 있지 않기 때문에 각 컨테이너는 최소한의 컴퓨팅 리소스를 사용하여 설치가 단순하고 간편합니다.</description>
    </item>
    
    <item>
      <title>Docker Container</title>
      <link>https://ssemee822.github.io/teamWebPage/container/content-post2/</link>
      <pubDate>Sun, 01 Aug 2021 21:29:20 +0200</pubDate>
      
      <guid>https://ssemee822.github.io/teamWebPage/container/content-post2/</guid>
      <description>Docker와 Container의 작동 방식 Docker는 컨테이너화를 지원하는 중요한 소프트웨어 플랫폼입니다. Docker에서 개발자는 컨테이너에 애플리케이션을 설계 및 구축하고, 애플리케이션을 테스트하고, 다른 시스템 및 환경으로 전달합니다.
2013년 출시된 Docker로 컨테이너화가 유명해졌으며 개발자가 인프라에서 애플리케이션을 간편하게 분리할 수 있게 되었습니다. 따라서 엔터프라이즈는 큰 개발 프로젝트를 몇 개의 소규모 팀으로 나누어 워크로드를 분산하고 최종 구축 속도를 높일 수 있습니다. 실제로 연구자들은 DevOps 워크플로가 효율적인 IT 부서에서 소프트웨어를 훨씬 자주 구축하고, 더 빨리 복구하고, 변경 실패 비율이 훨씬 낮았다는 것을 보여주었습니다.</description>
    </item>
    
    <item>
      <title>WEB 개요</title>
      <link>https://ssemee822.github.io/teamWebPage/web/categories-post/</link>
      <pubDate>Sun, 01 Aug 2021 21:29:20 +0200</pubDate>
      
      <guid>https://ssemee822.github.io/teamWebPage/web/categories-post/</guid>
      <description>Web(WWW)
• 웹은 인터넷이라는 물리적 네트워크를 기반으로 함 • 인터넷 상에 TCP/IP라는 네트워크 전송 계층의 프로토콜을 사용 • TCP/IP 네트워크 전송 계층위에 HTTP라는 네트워크 응용계층 프로토콜을 사용• HTTP 프로토콜을 이용해 HTML이라는 마크업 언어로 작성된 하이퍼 텍스트 데이터를 전송
Web Server(정적)
• 하이퍼 텍스트 파일등의 웹 페이지 구성 파일들을 제공(Publish)하는 서버 프로그램• HTTP 서버라고도 하며 다양한 제품들이 있음 • Apache, nginx
(Web) Application Server(WAS, AS)(동적)
• 서버에서 프로그램이 실행되고 그 결과로 HTML 파일을 생성하여 제공하는 서버 프로그램• 주로 Database에서 데이터를 조회하고, 결과를 HTML에 표현하는 기능을 많이 함• JAVA : Weblogic, Apache Tomcat • C# : IIS • PHP : PHP • JavaScript : Node.</description>
    </item>
    
    <item>
      <title>협업을 위한 깃허브의 주요 기능</title>
      <link>https://ssemee822.github.io/teamWebPage/git/categories-post/</link>
      <pubDate>Sun, 01 Aug 2021 21:29:20 +0200</pubDate>
      
      <guid>https://ssemee822.github.io/teamWebPage/git/categories-post/</guid>
      <description>깃허브는 개발자들이 협업하고 프로젝트를 관리하기 위한 강력한 도구입니다.
버전 관리: 깃허브는 코드와 파일의 변경 내역을 추적하여 버전 관리를 지원합니다. 이는 여러 개발자가 동시에 작업할 때 발생할 수 있는 충돌을 방지하고, 이전 버전으로의 복구를 용이하게 합니다.
브랜치: 깃허브는 다양한 브랜치를 통해 동시에 다양한 작업을 진행할 수 있도록 합니다. 이를 통해 여러 개발자들은 동시에 독립적으로 작업하고, 작업이 완료된 후에 이를 통합할 수 있습니다.
이슈 트래킹: 깃허브는 버그 리포트, 개선 제안, 작업 항목 등을 관리하기 위한 이슈 트래킹 시스템을 제공합니다.</description>
    </item>
    
    <item>
      <title>WEB 페이지 구성</title>
      <link>https://ssemee822.github.io/teamWebPage/web/linked-post/</link>
      <pubDate>Fri, 02 Oct 2015 21:49:20 +0200</pubDate>
      
      <guid>https://ssemee822.github.io/teamWebPage/web/linked-post/</guid>
      <description>HTML
• 시작과 끝을 표시하는 태그 쌍들로 이루어짐 • 선언 : html을 선언하는 태그 쌍 내부에 내용이 들어감 • 헤드 : 화면에 표시되지 않는 메타데이터 기록 부분 • 바디 : 화면에 표시되는 문서의 내용과 구조가 위치하는 부분
CSS
• html 요소별 프라퍼티 지정 • 요소이름(selector) {property:property value;} • 3가지 설정 방식이 있음 • Inline : HTML 요소에 직접 설정 • Internal : HTML 파일의 내부에 CSS 설정 • External : 외부파일에 CSS 설정하고 불러서 사용</description>
    </item>
    
    <item>
      <title>깃허브와 오픈소스</title>
      <link>https://ssemee822.github.io/teamWebPage/git/creating-a-new-theme/</link>
      <pubDate>Wed, 24 Jun 2015 13:50:46 +0200</pubDate>
      
      <guid>https://ssemee822.github.io/teamWebPage/git/creating-a-new-theme/</guid>
      <description>깃허브와 오픈소스 리포지토리 호스팅: 깃허브는 오픈소스 프로젝트의 리포지토리 호스팅에 최적화되어 있습니다. 개발자들은 자신의 코드를 깃허브에 업로드하여 다른 개발자들과 공유할 수 있습니다. 이를 통해 오픈소스 프로젝트에 참여하고 기여하는 것이 용이해집니다.
이슈 및 풀 리퀘스트 관리: 깃허브는 오픈소스 프로젝트에서 이슈 트래킹과 풀 리퀘스트 관리를 위한 편리한 기능을 제공합니다. 개발자들은 버그 리포트, 기능 제안 등을 이슈로 등록하고, 다른 개발자들과 토론하며 문제를 해결할 수 있습니다. 또한, 코드 변경 사항을 풀 리퀘스트로 제출하여 프로젝트에 기여할 수 있습니다.</description>
    </item>
    
  </channel>
</rss>
